# EasyMLOps .gitignore

# =============================================================================
# Python
# =============================================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.test
.env.production
.env.staging
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================================================
# Machine Learning / AI Models
# =============================================================================
# Model files
*.pkl
*.joblib
*.h5
*.pb
*.pth
*.onnx
*.pt
*.model
*.weights
*.bin

# TensorFlow
*.ckpt
*.ckpt.*
*.meta
*.index
checkpoint

# PyTorch
*.pth.tar

# Scikit-learn
*.sav

# Datasets (usually too large for version control)
*.csv
*.json
*.parquet
*.feather
*.hdf5
*.h5
data/
datasets/
raw_data/

# =============================================================================
# EasyMLOps Specific
# =============================================================================
# Model storage directories
models/
bentos/
mlruns/
artifacts/

# Logs
logs/
*.log
*.log.*

# Temporary files
tmp/
temp/
cache/

# Uploaded files
uploads/

# BentoML
bento_repository/
bentoml_repository/

# MLflow
mlruns/
mlartifacts/

# =============================================================================
# Docker
# =============================================================================
# Docker build context
.dockerignore

# Docker volumes data
docker_data/
postgres_data/
redis_data/
prometheus_data/
grafana_data/

# =============================================================================
# Database
# =============================================================================
# SQLite
*.db
*.sqlite
*.sqlite3

# PostgreSQL
*.sql
*.dump

# Database migrations (keep structure, ignore data)
# We want to keep Alembic migrations
# migrations/versions/*.py

# =============================================================================
# IDE / Editor
# =============================================================================
# VSCode
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =============================================================================
# Operating System
# =============================================================================
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# Monitoring & Metrics
# =============================================================================
# Prometheus
prometheus_data/
*.prom

# Grafana
grafana_data/

# =============================================================================
# Testing
# =============================================================================
# Test artifacts
.coverage
htmlcov/
.pytest_cache/
test-results/
test_*.db

# =============================================================================
# Documentation
# =============================================================================
# Sphinx build
docs/_build/
docs/build/

# =============================================================================
# Backup files
# =============================================================================
*.bak
*.backup
*.old
*.orig
*.rej

# =============================================================================
# Security
# =============================================================================
# Private keys
*.pem
*.key
*.crt
*.cert
secrets/
.secrets

# =============================================================================
# Temporary and Runtime
# =============================================================================
# PID files
*.pid

# Runtime directories
run/
var/

# Temporary Python files
.python-version

# =============================================================================
# Package managers
# =============================================================================
# npm
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# =============================================================================
# Custom ignore patterns (add your own below)
# =============================================================================
# Add any project-specific files or directories to ignore 